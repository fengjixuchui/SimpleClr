using System;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;

static unsafe class Program
{
    static void Main7(string[] args)
    {
        //Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        //socket.Connect("217.10.168.153", 8080);
        //Console.ReadKey(false);
        //socket.Close();
        //Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        //Stream s = File.Open(@"D:\1.exe", FileMode.Open, FileAccess.ReadWrite);
        //s.Seek(0, SeekOrigin.Begin);
        //socket.Connect("217.10.168.153", 8080);
        //byte[] buffer = new byte[500];
        //while (s.Position < s.Length)
        //{
        //    int len = s.Read(buffer, 0, buffer.Length);
        //    socket.Send(buffer, 0, len, 0);
        //}
        //Console.ReadKey(false);
        //socket.Close();
        //Console.ReadKey(false);
    }

    static void Main(string[] args)
    {
        Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        socket.Connect("217.10.168.153", 8080);
        byte[] buffer = new byte[10000];
        FileStream fs = File.OpenWrite("d:/2.exe");
        fs.Seek(0, SeekOrigin.Begin);
        int count = 0;
        Stopwatch sw = new Stopwatch();
        sw.Start();
        while (true)
        {
            int len = socket.Receive(buffer);
            count += len;
            fs.Write(buffer, 0, len);
            fs.Flush();
            Console.Title = $"recv-tot-len: {count}, recv-elapsed-time：{sw.Elapsed}";
        }
        socket.Close();
    }
    //    Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
    //    socket.Connect("217.10.168.153", 8080);
    //        byte[] buffer = new byte[10000];
    //        while (true)
    //        {
    //            int len = socket.Receive(buffer);
    //    Console.WriteLine(Encoding.ASCII.GetString(buffer, 0, len));
    //        }
    //socket.Close();


    static void Main2(string[] args)
    {
        Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
        socket.Bind(new IPEndPoint(IPAddress.Any, 6800));

        byte[] data = new byte[1500];
        while (true)
        {
            EndPoint ep = socket.LocalEndPoint;
            int len = socket.ReceiveFrom(data, ref ep);
            Console.WriteLine("ep: {0}, msg: {1}", ep.ToString(), Encoding.Default.GetString(data, 0, len));
        }
    }

    static void Main1(string[] args)
    {
        string s = File.ReadAllText(args[0]);
        string[] lines = s.Split(' ');
        string contents = string.Empty;
        bool hex = args.Length > 0 && args[1].Trim() == "x";
        for (int i = 0, f = 0; i < lines.Length; i++)
        {
            string line = lines[i];
            string segment = string.Empty;
            if (string.IsNullOrEmpty(line))
            {
                if (contents.Length > 0 && contents[contents.Length - 1] == ',')
                {
                    contents = contents.Remove(contents.Length - 1);
                }
                if ((i + 1) >= lines.Length)
                {
                    segment += "}";
                }
                contents += segment;
            }
            else
            {
                if (f++ == 0)
                {
                    segment = "{";
                }
                int n = int.Parse(line, NumberStyles.HexNumber);
                segment += hex ? "0x" + n.ToString("x2") : n.ToString();
                if ((i + 1) < lines.Length)
                {
                    segment += ',';
                }
                else
                {
                    segment += "}";
                }
                contents += segment;
            }
        }
        Console.WriteLine(contents);
    }
}